<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>开发 on xiaocai&#39;s blog</title>
        <link>https://hugiot.github.io/blog/categories/dev/</link>
        <description>Recent content in 开发 on xiaocai&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 09 Apr 2024 22:55:35 +0800</lastBuildDate><atom:link href="https://hugiot.github.io/blog/categories/dev/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>单网卡多IP</title>
        <link>https://hugiot.github.io/blog/p/%E5%8D%95%E7%BD%91%E5%8D%A1%E5%A4%9Aip/</link>
        <pubDate>Tue, 09 Apr 2024 22:55:35 +0800</pubDate>
        
        <guid>https://hugiot.github.io/blog/p/%E5%8D%95%E7%BD%91%E5%8D%A1%E5%A4%9Aip/</guid>
        <description>&lt;h2 id=&#34;前言&#34;&gt;
    &lt;a href=&#34;#%e5%89%8d%e8%a8%80&#34;&gt;#&lt;/a&gt;
    前言
&lt;/h2&gt;&lt;p&gt;一次偶然的机会，发现一个 Debian 系统的设备（跟系统无关），通过 &lt;code&gt;ifconfig&lt;/code&gt; 命令查看 IP 地址为：&lt;strong&gt;192.168.100.100&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;但是登陆路由器后台，查看设备列表并未发现该设备，仅有一个可疑的 &lt;strong&gt;192.168.100.13&lt;/strong&gt; 设备。&lt;/p&gt;
&lt;p&gt;神奇的是，通过 &lt;code&gt;ssh root@192.168.100.13&lt;/code&gt; 和 &lt;code&gt;ssh root@192.168.100.100&lt;/code&gt; 均能正常连接该设备。&lt;/p&gt;
&lt;p&gt;那么问题来了，同一设备为什么会出现两个不同的 IP 地址呢？而且两个 IP 还都能正常使用呢？&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;
    &lt;a href=&#34;#%e5%8e%9f%e5%9b%a0&#34;&gt;#&lt;/a&gt;
    原因
&lt;/h2&gt;&lt;p&gt;经过百度求证，确定同一设备的同一网卡的确可以配置多个 IP 地址，而且还是一种常见的做法（汗！！！知识盲区）。&lt;/p&gt;
&lt;h3 id=&#34;好处&#34;&gt;
    &lt;a href=&#34;#%e5%a5%bd%e5%a4%84&#34;&gt;#&lt;/a&gt;
    好处
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;逻辑隔离：可以为不同的服务或应用绑定到不同的IP地址上，实现逻辑上的隔离，增强安全性；&lt;/li&gt;
&lt;li&gt;访问控制：通过配置多个IP地址，可以控制对特定资源的访问权限，限制潜在的安全威胁；&lt;/li&gt;
&lt;li&gt;网络迁移和扩展：在网络结构调整或扩展时，可以在不更换物理硬件的情况下，通过更改IP配置来适应新的网络环境；&lt;/li&gt;
&lt;li&gt;多网段通信：如果设备需要与不同网段的其他设备通信，配置多个IP地址可以实现跨越多个网段的通信。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实践&#34;&gt;
    &lt;a href=&#34;#%e5%ae%9e%e8%b7%b5&#34;&gt;#&lt;/a&gt;
    实践
&lt;/h2&gt;&lt;h3 id=&#34;windows&#34;&gt;
    &lt;a href=&#34;#windows&#34;&gt;#&lt;/a&gt;
    Windows
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;通常可以通过：控制面板-&amp;gt;网络和共享中心-&amp;gt;更改适配器设置 来找到你的网卡&lt;/li&gt;
&lt;li&gt;之后选择你要配置的网卡，通过右键选择 属性-&amp;gt;Internet 协议版本 4 (TCP/IPv4)-&amp;gt;高级-&amp;gt;添加 来完成&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;ubuntu--debian&#34;&gt;
    &lt;a href=&#34;#ubuntu--debian&#34;&gt;#&lt;/a&gt;
    Ubuntu / Debian
&lt;/h3&gt;&lt;h4 id=&#34;桌面系统方式一&#34;&gt;
    &lt;a href=&#34;#%e6%a1%8c%e9%9d%a2%e7%b3%bb%e7%bb%9f%e6%96%b9%e5%bc%8f%e4%b8%80&#34;&gt;#&lt;/a&gt;
    桌面系统（方式一）
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;通常可以通过：设置-&amp;gt;网络-&amp;gt;IPv4
&lt;ul&gt;
&lt;li&gt;IPv4方式：&lt;strong&gt;手动&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;地址：
&lt;ul&gt;
&lt;li&gt;192.168.1.10 | 255.255.255.0 | 192.168.1.1&lt;/li&gt;
&lt;li&gt;192.168.1.11 | 255.255.255.0 | （此处无法填写）&lt;/li&gt;
&lt;li&gt;192.168.1.12 | 255.255.255.0 | （此处无法填写）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;命令行方式二&#34;&gt;
    &lt;a href=&#34;#%e5%91%bd%e4%bb%a4%e8%a1%8c%e6%96%b9%e5%bc%8f%e4%ba%8c&#34;&gt;#&lt;/a&gt;
    命令行（方式二）
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;添加&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 格式为：ip addr add {IP} dev {网卡名称}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip addr add 192.168.1.2/24 dev eth0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;删除&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 格式为：ip addr del {IP} dev {网卡名称}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip addr del 192.168.1.2/24 dev eth0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;扩展&#34;&gt;
    &lt;a href=&#34;#%e6%89%a9%e5%b1%95&#34;&gt;#&lt;/a&gt;
    扩展
&lt;/h2&gt;&lt;h3 id=&#34;secondary-ip次要-ip-地址&#34;&gt;
    &lt;a href=&#34;#secondary-ip%e6%ac%a1%e8%a6%81-ip-%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;
    Secondary IP（次要 IP 地址）
&lt;/h3&gt;&lt;p&gt;Secondary IP（次要IP地址）一般出现在 linux 系统下，它是分配给网络设备如路由器或计算机网络接口的额外IP地址，不同于该设备的主IP地址（Primary IP Address）。&lt;/p&gt;
&lt;p&gt;需要注意的是，Secondary IP 地址并不一定会被路由器直接使用，而是作为路由器的备用地址，用于在路由失败时进行通信。&lt;/p&gt;
&lt;p&gt;Secondary IP 地址不能通过 &lt;code&gt;ifconfig&lt;/code&gt; 命令来查看，需要通过其他命令来查看，如 &lt;code&gt;ip addr&lt;/code&gt; 命令。&lt;/p&gt;
&lt;p&gt;以下是 Ubuntu 系统下通过 &lt;code&gt;ip addr&lt;/code&gt; 命令查看网卡的 IP 地址和 Secondary IP 地址的示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    inet 127.0.0.1/8 scope host lo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       valid_lft forever preferred_lft forever
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    inet6 ::1/128 scope host noprefixroute 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       valid_lft forever preferred_lft forever
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2: enp5s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq state UP group default qlen 1000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    link/ether 04:42:1a:0b:0c:9a brd ff:ff:ff:ff:ff:ff
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    inet 192.168.31.111/24 brd 192.168.31.255 scope global noprefixroute enp5s0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       valid_lft forever preferred_lft forever
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    inet 192.168.31.222/24 brd 192.168.31.255 scope global secondary noprefixroute enp5s0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       valid_lft forever preferred_lft forever
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Modbus</title>
        <link>https://hugiot.github.io/blog/p/modbus/</link>
        <pubDate>Sat, 30 Mar 2024 09:38:43 +0800</pubDate>
        
        <guid>https://hugiot.github.io/blog/p/modbus/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;
    &lt;a href=&#34;#%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;
    简介
&lt;/h2&gt;&lt;p&gt;Modbus 是一种在工业控制领域广泛使用的串行通信协议，以其开放性、高可靠性和简单易用而成为行业标准。&lt;/p&gt;
&lt;p&gt;以下是关于 Modbus 的详细介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;历史背景：Modbus 由 Modicon 公司（现为施耐德电气 Schneider Electric）于1979年发表，最初设计用于可编程逻辑控制器（PLC）之间的通信。&lt;/li&gt;
&lt;li&gt;通信方式：Modbus 是一个应用层报文传输协议，它定义了设备之间通过不同总线或网络连接进行客户机/服务器通信的方式。这些连接可以是有线的，如EIA/TIA-232-E、EIA-422、EIA/TIA-485-A等，也可以是无线的。&lt;/li&gt;
&lt;li&gt;协议类型：Modbus协议有几种变体，包括 Modbus-RTU、Modbus-ASCII 和 Modbus-TCP。其中，Modbus-RTU是最常用且实现简单的版本，特别适合在单片机上使用。&lt;/li&gt;
&lt;li&gt;应用领域：Modbus主要用于连接PLC和其他自动化设备，如传感器、执行器等，用于监控、控制和数据采集。它的简单性和可靠性使得它在工业自动化领域非常受欢迎。&lt;/li&gt;
&lt;li&gt;技术特点：Modbus 协议的简单性和可靠性是其最大的优点。它允许工程师轻松地在不同的设备之间进行通信，而不必担心复杂的配置或兼容性问题。此外，作为一个开放标准，Modbus 无需支付版权费用，这也是其在工业界广泛应用的原因之一。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总的来说，Modbus 作为一种成熟的工业通信协议，因其易于实施和广泛的支持，成为了工业自动化系统中不可或缺的一部分。无论是在新建项目还是现有系统的升级改造中，Modbus 都是一个非常值得考虑的通信解决方案。&lt;/p&gt;
&lt;h2 id=&#34;通讯方式&#34;&gt;
    &lt;a href=&#34;#%e9%80%9a%e8%ae%af%e6%96%b9%e5%bc%8f&#34;&gt;#&lt;/a&gt;
    通讯方式
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;串口（常用）&lt;/li&gt;
&lt;li&gt;Modbus TCP（常用）&lt;/li&gt;
&lt;li&gt;Modbus UDP&lt;/li&gt;
&lt;li&gt;Modbus RTU/ASCII Over TCP&lt;/li&gt;
&lt;li&gt;Modbus RTU/ASCII Over UDP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;功能码&#34;&gt;
    &lt;a href=&#34;#%e5%8a%9f%e8%83%bd%e7%a0%81&#34;&gt;#&lt;/a&gt;
    功能码
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;提示：以下请求和响应均忽略显示报文末尾的校验位（2字节）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能码（10进制）&lt;/th&gt;
&lt;th&gt;功能码（16进制）&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0x01&lt;/td&gt;
&lt;td&gt;读线圈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;0x05&lt;/td&gt;
&lt;td&gt;写单个线圈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;0x0F&lt;/td&gt;
&lt;td&gt;写多个线圈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0x02&lt;/td&gt;
&lt;td&gt;读离散量输入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;0x04&lt;/td&gt;
&lt;td&gt;读输入寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;0x03&lt;/td&gt;
&lt;td&gt;读保持寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;0x06&lt;/td&gt;
&lt;td&gt;写单个保持寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;0x10&lt;/td&gt;
&lt;td&gt;写多个保持寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;0x01-读线圈&#34;&gt;
    &lt;a href=&#34;#0x01-%e8%af%bb%e7%ba%bf%e5%9c%88&#34;&gt;#&lt;/a&gt;
    0x01 读线圈
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;请求：01 01 00 00 00 0A&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;起始地址&lt;/th&gt;
&lt;th&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 0A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;响应：01 01 02 FF 03&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;数据长度（字节数）&lt;/th&gt;
&lt;th&gt;数据（单字节存储 8 个线圈状态）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;FF 03&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;0x05-写单个线圈&#34;&gt;
    &lt;a href=&#34;#0x05-%e5%86%99%e5%8d%95%e4%b8%aa%e7%ba%bf%e5%9c%88&#34;&gt;#&lt;/a&gt;
    0x05 写单个线圈
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;请求：01 05 00 00 FF 00&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;线圈地址&lt;/th&gt;
&lt;th&gt;值（0：00 00、1：FF 00）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;FF 00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;响应（原样返回）：01 05 00 00 FF 00&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;0x0f-写多个线圈&#34;&gt;
    &lt;a href=&#34;#0x0f-%e5%86%99%e5%a4%9a%e4%b8%aa%e7%ba%bf%e5%9c%88&#34;&gt;#&lt;/a&gt;
    0x0F 写多个线圈
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;请求：01 0F 00 00 00 01 01 00&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;起始地址&lt;/th&gt;
&lt;th&gt;数量&lt;/th&gt;
&lt;th&gt;数据长度&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;0F&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 01&lt;/td&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;响应：01 0F 00 00 00 01&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;起始地址&lt;/th&gt;
&lt;th&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;0F&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 01&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;0x02-读离散量输入&#34;&gt;
    &lt;a href=&#34;#0x02-%e8%af%bb%e7%a6%bb%e6%95%a3%e9%87%8f%e8%be%93%e5%85%a5&#34;&gt;#&lt;/a&gt;
    0x02 读离散量输入
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;请求：01 02 00 00 00 0A&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;起始地址&lt;/th&gt;
&lt;th&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 0A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;响应：01 02 02 00 00&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;数据长度（字节数）&lt;/th&gt;
&lt;th&gt;数据（单字节存储 8 个离散输入）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;0x04-读输入寄存器&#34;&gt;
    &lt;a href=&#34;#0x04-%e8%af%bb%e8%be%93%e5%85%a5%e5%af%84%e5%ad%98%e5%99%a8&#34;&gt;#&lt;/a&gt;
    0x04 读输入寄存器
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;请求：01 04 00 00 00 02&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;起始地址&lt;/th&gt;
&lt;th&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 02&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;响应：01 04 04 00 01 00 02&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;数据长度（字节数）&lt;/th&gt;
&lt;th&gt;数据（单寄存器占用2字节）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;00 01 00 02&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;0x03-读保持寄存器&#34;&gt;
    &lt;a href=&#34;#0x03-%e8%af%bb%e4%bf%9d%e6%8c%81%e5%af%84%e5%ad%98%e5%99%a8&#34;&gt;#&lt;/a&gt;
    0x03 读保持寄存器
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;请求：01 03 00 00 00 02&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;起始地址&lt;/th&gt;
&lt;th&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 02&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;响应：01 03 04 00 01 00 02&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;数据长度（字节数）&lt;/th&gt;
&lt;th&gt;数据（单寄存器占用2字节）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;03&lt;/td&gt;
&lt;td&gt;04&lt;/td&gt;
&lt;td&gt;00 01 00 02&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;0x06-写单个保持寄存器&#34;&gt;
    &lt;a href=&#34;#0x06-%e5%86%99%e5%8d%95%e4%b8%aa%e4%bf%9d%e6%8c%81%e5%af%84%e5%ad%98%e5%99%a8&#34;&gt;#&lt;/a&gt;
    0x06 写单个保持寄存器
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;请求：01 06 00 00 00 01&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;寄存器地址&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 01&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;响应（原样返回）：01 06 00 00 00 01&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;0x10-写多个保持寄存器&#34;&gt;
    &lt;a href=&#34;#0x10-%e5%86%99%e5%a4%9a%e4%b8%aa%e4%bf%9d%e6%8c%81%e5%af%84%e5%ad%98%e5%99%a8&#34;&gt;#&lt;/a&gt;
    0x10 写多个保持寄存器
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;请求：01 10 00 00 00 01 02 00 01&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;起始地址&lt;/th&gt;
&lt;th&gt;数量&lt;/th&gt;
&lt;th&gt;数据长度&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 01&lt;/td&gt;
&lt;td&gt;02&lt;/td&gt;
&lt;td&gt;00 01&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;响应：01 10 00 00 00 01&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;从机地址&lt;/th&gt;
&lt;th&gt;功能码&lt;/th&gt;
&lt;th&gt;起始地址&lt;/th&gt;
&lt;th&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 01&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;报文结构&#34;&gt;
    &lt;a href=&#34;#%e6%8a%a5%e6%96%87%e7%bb%93%e6%9e%84&#34;&gt;#&lt;/a&gt;
    报文结构
&lt;/h2&gt;&lt;h3 id=&#34;modbus-tcp&#34;&gt;
    &lt;a href=&#34;#modbus-tcp&#34;&gt;#&lt;/a&gt;
    Modbus TCP
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;TCP 协议自带校验位，所以 Modbus TCP 报文中不包含校验位&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Modbus TCP 协议报文组成：&lt;strong&gt;MBAP 报文头&lt;/strong&gt; + &lt;strong&gt;功能码&lt;/strong&gt; + &lt;strong&gt;数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MBAP 报文头&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;长度&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;事务处理标识&lt;/td&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;00 01&lt;/td&gt;
&lt;td&gt;可理解为报文序列号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;协议标识&lt;/td&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;00 00&lt;/td&gt;
&lt;td&gt;00 00 表示 ModbusTCP 协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;长度&lt;/td&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;00 06&lt;/td&gt;
&lt;td&gt;表示接下来的数据长度，单位为字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;单元标识符&lt;/td&gt;
&lt;td&gt;1 字节&lt;/td&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;可理解为设备地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;读保持寄存器请求示例&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求：00 01 00 00 00 06 01 03 00 00 00 01&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;modbus-rtu&#34;&gt;
    &lt;a href=&#34;#modbus-rtu&#34;&gt;#&lt;/a&gt;
    Modbus RTU
&lt;/h3&gt;&lt;p&gt;Modbus RTU 协议报文组成：&lt;strong&gt;Salve Address&lt;/strong&gt; + &lt;strong&gt;功能码&lt;/strong&gt; + &lt;strong&gt;数据&lt;/strong&gt; + &lt;strong&gt;CRC&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;长度&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Slave Address&lt;/td&gt;
&lt;td&gt;1 字节&lt;/td&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;可理解为设备地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;功能码&lt;/td&gt;
&lt;td&gt;1 字节&lt;/td&gt;
&lt;td&gt;06&lt;/td&gt;
&lt;td&gt;06 写单个保持寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据&lt;/td&gt;
&lt;td&gt;0～252 字节&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CRC&lt;/td&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;0D 0A&lt;/td&gt;
&lt;td&gt;校验数据&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;modbus-ascii&#34;&gt;
    &lt;a href=&#34;#modbus-ascii&#34;&gt;#&lt;/a&gt;
    Modbus ASCII
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;ASCII 模式下，每个 8 位的字节会被拆分成两个 ASCII 字符进行发送，因此发送的字符量比 RTU 增加一倍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Modbus ASCII 协议报文组成：&lt;strong&gt;开始&lt;/strong&gt; + &lt;strong&gt;地址&lt;/strong&gt; + &lt;strong&gt;功能码&lt;/strong&gt; + &lt;strong&gt;数据&lt;/strong&gt; + &lt;strong&gt;LRC&lt;/strong&gt; + &lt;strong&gt;结束&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;长度&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;开始&lt;/td&gt;
&lt;td&gt;1 字节&lt;/td&gt;
&lt;td&gt;3A&lt;/td&gt;
&lt;td&gt;固定以英文冒号（ASCII码：0x3A）开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;地址&lt;/td&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;30 31&lt;/td&gt;
&lt;td&gt;可理解为设备地址，设备地址 01 拆分成两个 ASCII 码可得到：30 31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;功能码&lt;/td&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;30 36&lt;/td&gt;
&lt;td&gt;写单个保持寄存器，功能码 06 拆分成两个 ASCII 码可得到：30 36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据&lt;/td&gt;
&lt;td&gt;0～252 字节&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LRC&lt;/td&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;校验数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;结束&lt;/td&gt;
&lt;td&gt;2 字节&lt;/td&gt;
&lt;td&gt;0D 0A&lt;/td&gt;
&lt;td&gt;固定回车（0x0D）和换行符（0x0A）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;扩展&#34;&gt;
    &lt;a href=&#34;#%e6%89%a9%e5%b1%95&#34;&gt;#&lt;/a&gt;
    扩展
&lt;/h2&gt;&lt;h3 id=&#34;plc-地址&#34;&gt;
    &lt;a href=&#34;#plc-%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;
    PLC 地址
&lt;/h3&gt;&lt;p&gt;在 Modbus 通信中，PLC 地址指的是映射到可编程逻辑控制器（PLC）内部的存储区的地址。&lt;/p&gt;
&lt;p&gt;这些地址通常以10进制描述，共有5位数字。第一位代表寄存器的类型，比如4代表保持寄存器，而3代表输入寄存器。后四位数字则表示具体的寄存器编号。例如，地址40001对应于保持寄存器的第一个单元。在使用Modbus协议的设备或软件中，用户设置或看到的通常是Modbus数据地址。这些地址是用于访问特定数据的，它们通过各种&amp;quot;功能&amp;quot;代码来读写。&lt;/p&gt;
&lt;p&gt;在 Modbus 通信协议中，数据的地址使用形式如 0x、1x、3x 和 4x 分别表示数字量输出、数字量输入、模拟量输入等数据地址。&lt;/p&gt;
&lt;p&gt;这些地址在通信时会使用到，而在编程时，由于PLC地址前缀的区分作用，通常只需说明后四位数，并将其转换为四位十六进制地址。例如，PLC地址40001对应寻址地址0x0000。Modbus主设备指令将地址映射至正确的功能，以便发送到从站。Modbus主设备指令支持的地址范围包括00001至09999为离散输出（线圈），10001至19999为离散输入（触点），30001至39999为输入寄存器（通常是模拟量输入），以及40001至49999为保持寄存器。&lt;/p&gt;
&lt;p&gt;总的来说，了解这些地址与PLC内部元件的对应关系对于实现精准控制非常重要，这也是自动化工程师必须掌握的知识点。&lt;/p&gt;
&lt;h3 id=&#34;rs485&#34;&gt;
    &lt;a href=&#34;#rs485&#34;&gt;#&lt;/a&gt;
    RS485
&lt;/h3&gt;&lt;p&gt;RS485 是一种用于物理通信层的&lt;strong&gt;串行&lt;/strong&gt;通讯标准。&lt;/p&gt;
&lt;p&gt;RS485，完整称呼为EIA/TIA-485，是从它的标准编号和制定标准的组织Electronic Industries Alliance (EIA)得来的。这个标准定义了信号传输的方法，属于开放系统互连模型的第一级。&lt;/p&gt;
&lt;p&gt;RS485设计的初衷是为了克服RS232的局限性，提高数据传输的可靠性和距离。与RS232不同的是，RS485支持多点通信，可以实现更长距离的数据传输。它通过一对双绞线电缆进行差分信号传输，这种差分方式可以有效抵抗共模干扰，从而在噪声环境下保持数据的稳定性。&lt;/p&gt;
&lt;p&gt;RS485通常采用半双工的通信方式，意味着在同一时间，数据只能在一个方向上传输。它使用两根或三根电线完成连接：数据线、带有反向数据的电线以及地线（0V）。由于其强大的抗干扰能力和简便的网络拓扑结构，RS485在工业控制系统中得到了广泛应用，例如自动化设备之间的通信、楼宇自动化系统等。&lt;/p&gt;
&lt;p&gt;总的来说，RS485作为一种稳定可靠的工业通信标准，被广泛应用于需要远距离和多节点通信的场景中。&lt;/p&gt;
&lt;h3 id=&#34;串口&#34;&gt;
    &lt;a href=&#34;#%e4%b8%b2%e5%8f%a3&#34;&gt;#&lt;/a&gt;
    串口
&lt;/h3&gt;&lt;p&gt;串口是计算机上一种非常通用设备通信协议，串口是按位（bit）发送和接收数据。&lt;/p&gt;
&lt;h4 id=&#34;波特率&#34;&gt;
    &lt;a href=&#34;#%e6%b3%a2%e7%89%b9%e7%8e%87&#34;&gt;#&lt;/a&gt;
    波特率
&lt;/h4&gt;&lt;p&gt;衡量通信速度参数，表示每秒中传送的 bit 的个数；&lt;/p&gt;
&lt;p&gt;例如：300 波特率表示每秒发送 300 个 bit；&lt;/p&gt;
&lt;p&gt;波特率和距离成反比，高波特率常常用于放置的很近的仪器间通信。&lt;/p&gt;
&lt;h4 id=&#34;数据位&#34;&gt;
    &lt;a href=&#34;#%e6%95%b0%e6%8d%ae%e4%bd%8d&#34;&gt;#&lt;/a&gt;
    数据位
&lt;/h4&gt;&lt;p&gt;衡量通信中实际数据位的参数，计算机发送一个信息包，实际的数据不会是 8 位的；&lt;/p&gt;
&lt;p&gt;比如，标准的 ASCII 码是 0～127（7位），扩展的 ASCII 码是 0～255（8位）；&lt;/p&gt;
&lt;p&gt;如果数据使用简单的文本（标准 ASCII 码），那么每个数据包使用 7 位数据。&lt;/p&gt;
&lt;h4 id=&#34;停止位&#34;&gt;
    &lt;a href=&#34;#%e5%81%9c%e6%ad%a2%e4%bd%8d&#34;&gt;#&lt;/a&gt;
    停止位
&lt;/h4&gt;&lt;p&gt;表示单个包的最后一位，典型值为：1、2 位；&lt;/p&gt;
&lt;p&gt;停止位不仅表示传输的结束，并且提供计算机校正时钟同步的机会。&lt;/p&gt;
&lt;h4 id=&#34;奇偶性校验&#34;&gt;
    &lt;a href=&#34;#%e5%a5%87%e5%81%b6%e6%80%a7%e6%a0%a1%e9%aa%8c&#34;&gt;#&lt;/a&gt;
    奇偶性校验
&lt;/h4&gt;&lt;p&gt;在串口通信中一种简单的检错方式，典型值为：不校验、偶校验、奇校验。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>正则表达式</title>
        <link>https://hugiot.github.io/blog/p/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
        <pubDate>Tue, 26 Mar 2024 10:35:51 +0800</pubDate>
        
        <guid>https://hugiot.github.io/blog/p/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;
    &lt;a href=&#34;#%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;
    简介
&lt;/h2&gt;&lt;p&gt;正则表达式&lt;/p&gt;
&lt;h2 id=&#34;修饰符&#34;&gt;
    &lt;a href=&#34;#%e4%bf%ae%e9%a5%b0%e7%ac%a6&#34;&gt;#&lt;/a&gt;
    修饰符
&lt;/h2&gt;&lt;p&gt;标记也称为修饰符，正则表达式的标记用于指定额外的匹配策略。&lt;br&gt;
标记不卸载正则表达式里，标记位于表达式外，格式如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/pattern/s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;span style=&#34;min-width: 100px; display: block&#34;&gt;修饰符&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;不区分大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;全局匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;m&lt;/td&gt;
&lt;td&gt;多行匹配，使 ^ 和 $ 匹配每一行的开头和结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;使 &lt;code&gt;.&lt;/code&gt; 可以匹配所有字符，默认 &lt;code&gt;.&lt;/code&gt; 是匹配换行符 &lt;code&gt;\n&lt;/code&gt; 之外的任何字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;元字符&#34;&gt;
    &lt;a href=&#34;#%e5%85%83%e5%ad%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;
    元字符
&lt;/h2&gt;&lt;p&gt;正则表达式中一些特殊功能符号&lt;/p&gt;
&lt;h3 id=&#34;非打印字符&#34;&gt;
    &lt;a href=&#34;#%e9%9d%9e%e6%89%93%e5%8d%b0%e5%ad%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;
    非打印字符
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;span style=&#34;min-width: 100px; display: block&#34;&gt;字符&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\cx&lt;/td&gt;
&lt;td&gt;匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 &amp;lsquo;c&amp;rsquo; 字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\f&lt;/td&gt;
&lt;td&gt;匹配一个换页符。等价于 \x0c 和 \cL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;匹配一个换行符。等价于 \x0a 和 \cJ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r&lt;/td&gt;
&lt;td&gt;匹配一个回车符。等价于 \x0d 和 \cM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。注意 Unicode 正则表达式会匹配全角空格符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;匹配任何非空白字符。等价于 [^ \f\n\r\t\v]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\t&lt;/td&gt;
&lt;td&gt;匹配一个制表符。等价于 \x09 和 \cI&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\v&lt;/td&gt;
&lt;td&gt;匹配一个垂直制表符。等价于 \x0b 和 \cK&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;特殊字符&#34;&gt;
    &lt;a href=&#34;#%e7%89%b9%e6%ae%8a%e5%ad%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;
    特殊字符
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;span style=&#34;min-width: 100px; display: block&#34;&gt;字符&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 &lt;code&gt;\n&lt;/code&gt; 或 &lt;code&gt;\r&lt;/code&gt;。要匹配 $ 字符本身，请使用 &lt;code&gt;\$&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 &lt;code&gt;\(&lt;/code&gt; 和 &lt;code&gt;\)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配前面的子表达式零次或多次。要匹配 &lt;code&gt;*&lt;/code&gt; 字符，请使用 &lt;code&gt;\*&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;+&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配前面的子表达式一次或多次。要匹配 &lt;code&gt;+&lt;/code&gt; 字符，请使用 &lt;code&gt;\+&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配除换行符 &lt;code&gt;\n&lt;/code&gt; 之外的任何单字符。要匹配 &lt;code&gt;.&lt;/code&gt; ，请使用 &lt;code&gt;\.&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;标记一个中括号表达式的开始。要匹配 &lt;code&gt;[&lt;/code&gt;，请使用 &lt;code&gt;\[&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 &lt;code&gt;\?&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， n 匹配字符 n 。&lt;code&gt;\n&lt;/code&gt; 匹配换行符。序列 &lt;code&gt;\\&lt;/code&gt; 匹配 &lt;code&gt;\&lt;/code&gt;，而 &lt;code&gt;\(&lt;/code&gt; 则匹配 &lt;code&gt;(&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配 ^ 字符本身，请使用 &lt;code&gt;\^&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;标记限定符表达式的开始。要匹配 {，请使用 &lt;code&gt;\{&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;`&lt;/td&gt;
&lt;td&gt;`&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;限定符&#34;&gt;
    &lt;a href=&#34;#%e9%99%90%e5%ae%9a%e7%ac%a6&#34;&gt;#&lt;/a&gt;
    限定符
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;span style=&#34;min-width: 100px; display: block&#34;&gt;字符&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;匹配前面的子表达式零次或多次。例如，zo* 能匹配 &amp;ldquo;z&amp;rdquo; 以及 &amp;ldquo;zoo&amp;rdquo;。* 等价于{0,}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;匹配前面的子表达式一次或多次。例如，&amp;lsquo;zo+&amp;rsquo; 能匹配 &amp;ldquo;zo&amp;rdquo; 以及 &amp;ldquo;zoo&amp;rdquo;，但不能匹配 &amp;ldquo;z&amp;rdquo;。+ 等价于 {1,}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;匹配前面的子表达式零次或一次。例如，&amp;ldquo;do(es)?&amp;rdquo; 可以匹配 &amp;ldquo;do&amp;rdquo; 、 &amp;ldquo;does&amp;rdquo; 中的 &amp;ldquo;does&amp;rdquo; 、 &amp;ldquo;doxy&amp;rdquo; 中的 &amp;ldquo;do&amp;rdquo; 。? 等价于 {0,1}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{n}&lt;/td&gt;
&lt;td&gt;n 是一个非负整数。匹配确定的 n 次。例如，&amp;lsquo;o{2}&amp;rsquo; 不能匹配 &amp;ldquo;Bob&amp;rdquo; 中的 &amp;lsquo;o&amp;rsquo;，但是能匹配 &amp;ldquo;food&amp;rdquo; 中的两个 o&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{n,}&lt;/td&gt;
&lt;td&gt;n 是一个非负整数。至少匹配n 次。例如，&amp;lsquo;o{2,}&amp;rsquo; 不能匹配 &amp;ldquo;Bob&amp;rdquo; 中的 &amp;lsquo;o&amp;rsquo;，但能匹配 &amp;ldquo;foooood&amp;rdquo; 中的所有 o。&amp;lsquo;o{1,}&amp;rsquo; 等价于 &amp;lsquo;o+&amp;rsquo;。&amp;lsquo;o{0,}&amp;rsquo; 则等价于 &amp;lsquo;o*&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{n,m}&lt;/td&gt;
&lt;td&gt;m 和 n 均为非负整数，其中n &amp;lt;= m。最少匹配 n 次且最多匹配 m 次。例如，&amp;ldquo;o{1,3}&amp;rdquo; 将匹配 &amp;ldquo;fooooood&amp;rdquo; 中的前三个 o。&amp;lsquo;o{0,1}&amp;rsquo; 等价于&amp;rsquo;o?&amp;rsquo;。请注意在逗号和两个数之间不能有空格&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;定位符&#34;&gt;
    &lt;a href=&#34;#%e5%ae%9a%e4%bd%8d%e7%ac%a6&#34;&gt;#&lt;/a&gt;
    定位符
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;span style=&#34;min-width: 100px; display: block&#34;&gt;字符&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;匹配一个单词边界，即字与空格间的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\B&lt;/td&gt;
&lt;td&gt;非单词边界匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;补充其他字符&#34;&gt;
    &lt;a href=&#34;#%e8%a1%a5%e5%85%85%e5%85%b6%e4%bb%96%e5%ad%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;
    补充其他字符
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;span style=&#34;min-width: 100px; display: block&#34;&gt;字符&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;(pattern)&lt;/td&gt;
&lt;td&gt;匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 &amp;lsquo;(&amp;rsquo; 或 &amp;lsquo;)&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(?:pattern)&lt;/td&gt;
&lt;td&gt;匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 &amp;ldquo;或&amp;rdquo; 字符 `(&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(?=pattern)&lt;/td&gt;
&lt;td&gt;正向肯定预查（look ahead positive assert），在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，`Windows(?=95&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(?!pattern)&lt;/td&gt;
&lt;td&gt;正向否定预查(negative assert)，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如`Windows(?!95&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(?&amp;lt;=pattern)&lt;/td&gt;
&lt;td&gt;反向(look behind)肯定预查，与正向肯定预查类似，只是方向相反。例如，`(?&amp;lt;=95&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(?&amp;lt;!pattern)&lt;/td&gt;
&lt;td&gt;反向否定预查，与正向否定预查类似，只是方向相反。例如`(?&amp;lt;!95&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;`x&lt;/td&gt;
&lt;td&gt;y`&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[xyz]&lt;/td&gt;
&lt;td&gt;字符集合。匹配所包含的任意一个字符。例如， &amp;lsquo;[abc]&amp;rsquo; 可以匹配 &amp;ldquo;plain&amp;rdquo; 中的 &amp;lsquo;a&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^xyz]&lt;/td&gt;
&lt;td&gt;负值字符集合。匹配未包含的任意字符。例如， &amp;lsquo;[^abc]&amp;rsquo; 可以匹配 &amp;ldquo;plain&amp;rdquo; 中的&amp;rsquo;p&amp;rsquo;、&amp;rsquo;l&amp;rsquo;、&amp;lsquo;i&amp;rsquo;、&amp;rsquo;n&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[a-z]&lt;/td&gt;
&lt;td&gt;字符范围。匹配指定范围内的任意字符。例如，&amp;rsquo;[a-z]&amp;rsquo; 可以匹配 &amp;lsquo;a&amp;rsquo; 到 &amp;lsquo;z&amp;rsquo; 范围内的任意小写字母字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^a-z]&lt;/td&gt;
&lt;td&gt;负值字符范围。匹配任何不在指定范围内的任意字符。例如，&amp;rsquo;[^a-z]&amp;rsquo; 可以匹配任何不在 &amp;lsquo;a&amp;rsquo; 到 &amp;lsquo;z&amp;rsquo; 范围内的任意字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;匹配一个单词边界，也就是指单词和空格间的位置。例如， &amp;rsquo;er\b&amp;rsquo; 可以匹配&amp;quot;never&amp;quot; 中的 &amp;rsquo;er&amp;rsquo;，但不能匹配 &amp;ldquo;verb&amp;rdquo; 中的 &amp;rsquo;er&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\B&lt;/td&gt;
&lt;td&gt;匹配非单词边界。&amp;rsquo;er\B&amp;rsquo; 能匹配 &amp;ldquo;verb&amp;rdquo; 中的 &amp;rsquo;er&amp;rsquo;，但不能匹配 &amp;ldquo;never&amp;rdquo; 中的 &amp;rsquo;er&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\cx&lt;/td&gt;
&lt;td&gt;匹配由 x 指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 &amp;lsquo;c&amp;rsquo; 字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\d&lt;/td&gt;
&lt;td&gt;匹配一个数字字符。等价于 [0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\D&lt;/td&gt;
&lt;td&gt;匹配一个非数字字符。等价于 [^0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\f&lt;/td&gt;
&lt;td&gt;匹配一个换页符。等价于 \x0c 和 \cL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;匹配一个换行符。等价于 \x0a 和 \cJ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r&lt;/td&gt;
&lt;td&gt;匹配一个回车符。等价于 \x0d 和 \cM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;匹配任何非空白字符。等价于 [^ \f\n\r\t\v]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\t&lt;/td&gt;
&lt;td&gt;匹配一个制表符。等价于 \x09 和 \cI&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\v&lt;/td&gt;
&lt;td&gt;匹配一个垂直制表符。等价于 \x0b 和 \cK&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;匹配字母、数字、下划线。等价于&amp;rsquo;[A-Za-z0-9_]&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;匹配非字母、数字、下划线。等价于 &amp;lsquo;[^A-Za-z0-9_]&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\xn&lt;/td&gt;
&lt;td&gt;匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，&amp;rsquo;\x41&amp;rsquo; 匹配 &amp;ldquo;A&amp;rdquo;。&amp;rsquo;\x041&amp;rsquo; 则等价于 &amp;lsquo;\x04&amp;rsquo; &amp;amp; &amp;ldquo;1&amp;rdquo;。正则表达式中可以使用 ASCII 编码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\num&lt;/td&gt;
&lt;td&gt;匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，&amp;rsquo;(.)\1&amp;rsquo; 匹配两个连续的相同字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;标识一个八进制转义值或一个向后引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\nm&lt;/td&gt;
&lt;td&gt;标识一个八进制转义值或一个向后引用。如果 \nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \nm 将匹配八进制转义值 nm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\nml&lt;/td&gt;
&lt;td&gt;如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\un&lt;/td&gt;
&lt;td&gt;匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \u00A9 匹配版权符号 (?)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        
    </channel>
</rss>
